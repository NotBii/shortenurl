name: Deploy workflow on production environment

on:
  pull_request:
      branches: [main]
      types: [closed]

jobs:
  build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.15.0]
        steps:
          - name: âœ… Checkout branch
            uses: actions/checkout@v3

          - name: ðŸ”¨ Build Project
            run: pnpm build

  deploy:
    if: github.event.pull_request.merged == true
    environment: production
    runs-on: ubuntu-latest
    steps:
      - name: checkout branch
        uses: actions/checkout@v3

      - name: Make config folder
        run: mkdir -p config

      - name: Create .env file
        run:
          touch ${{ env.ENV_PATH }}
          echo DOMAIN_FIR=${{ secrets.DOMAIN_FIR }} >> ${{ env.ENV_PATH }}
          echo SOCKET_PORT_PROD=${{ secrets.SOCKET_PORT_PROD }} >> ${{ env.ENV_PATH }}
          echo SOCKET_PORT_TEST=${{ secrets.SOCKET_PORT_TEST }} >> ${{ env.ENV_PATH }}

      - name:  Zip project files
        run: zip -r ./$GITHUB_SHA.zip .

      - name: Access to AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWSACCESSKEY }}
          aws-secret-access-key: ${{ secrets.AWSSECRETEKEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://${{ secrets.S3_BUCKET_NAME }}/${{ secrets.S3_BUCKET_DIR_NAME }}/$GITHUB_SHA.zip

      - name: Deploy to EC2 with CodeDeploy
        run: aws deploy create-deployment
            --application-name codedeploy-app
            --deployment-config-name CodeDeployDefault.AllAtOnce
            --deployment-group-name ${{ secrets.DEPLOYMENT_GROUP_NAME }}
            --s3-location bucket=${{ secrets.S3_BUCKET_NAME }},bundleType=zip,key=${{ env.S3_BUCKET_DIR_NAME }}/$GITHUB_SHA.zip